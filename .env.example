# Google Calendar API Configuration
#VITE_GOOGLE_CLIENT_ID=your_google_client_id_here
VITE_GOOGLE_CLIENT_SECRET=your_google_client_secret_here
VITE_GOOGLE_REDIRECT_URI=https://your-domain.com/auth/callback
VITE_GOOGLE_API_KEY=your_google_api_key_here

# OpenAI Configuration
OPENAI_API_KEY=your_openai_api_key_here

# Composio Configuration
COMPOSIO_API_KEY=your_composio_api_key_here

# Server Configuration
SERVER_PORT=3001
CLIENT_URL=http://localhost:5173

# Example values (replace with your actual credentials):
# VITE_GOOGLE_CLIENT_ID=123456789-abcdefghijklmnop.apps.googleusercontent.com
# VITE_GOOGLE_CLIENT_SECRET=GOCSPX-abcdefghijklmnopqrstuvwxyz
# VITE_GOOGLE_API_KEY=AIzaSyAbCdEfGhIjKlMnOpQrStUvWxYz123456
# OPENAI_API_KEY=sk-proj-1234567890abcdef...
# COMPOSIO_API_KEY=your_composio_api_key_here

# ðŸ”§ OAUTH 2.0 CONFIGURATION INSTRUCTIONS:
# 
# 1. Go to Google Cloud Console (https://console.cloud.google.com/)
# 2. Create a new project or select existing one
# 3. Enable Google Calendar API:
#    - Go to "APIs & Services" > "Library"
#    - Search for "Google Calendar API"
#    - Click "Enable"
# 4. Create OAuth 2.0 Credentials:
#    - Go to "APIs & Services" > "Credentials"
#    - Click "Create Credentials" > "OAuth 2.0 Client IDs"
#    - Choose "Web application"
#    - In "Authorized redirect URIs", add your redirect URI
#    - Copy the Client ID and Client Secret to your .env file
# 5. Create an API Key:
#    - In "Credentials", click "Create Credentials" > "API Key"
#    - Copy the API key to your .env file
# 6. Configure OAuth Consent Screen:
#    - Go to "APIs & Services" > "OAuth consent screen"
#    - Fill in required information
#    - Add your email as a test user if in testing mode

# ðŸ¤– OPENAI + COMPOSIO CONFIGURATION:
# 
# 1. Get OpenAI API Key:
#    - Go to https://platform.openai.com/api-keys
#    - Create a new API key
#    - Add it as OPENAI_API_KEY in your .env file
# 
# 2. Get Composio API Key:
#    - Go to https://app.composio.dev/
#    - Sign up/login and get your API key
#    - Add it as COMPOSIO_API_KEY in your .env file
# 
# 3. The system will automatically create user-specific entities in Composio
#    based on the authenticated user's email address
# 
# 4. Each user gets their own Google Calendar connection through Composio
#    ensuring complete data isolation and security

# ðŸ”’ SECURITY NOTES:
# - Never commit your .env file to version control
# - Use environment variables for all sensitive credentials
# - Consider implementing proper OAuth flow for production
# - Restrict API keys to specific domains in production
# - The redirect URI must match EXACTLY between Google Cloud Console and your .env file
# - Use HTTPS in production for security

# ðŸ“‹ REDIRECT URI EXAMPLES:
# Development: http://localhost:5173/auth/callback
# Production: https://yourdomain.com/auth/callback
# Bolt.new: https://your-bolt-url.webcontainer-api.io/auth/callback

# IMPORTANT: When setting up Google OAuth, make sure to request the full calendar scope:
# https://www.googleapis.com/auth/calendar (not just readonly)
# This enables full editing capabilities for Google Calendar events.